<?php

namespace Yoti\Test\IDV\Session\Instructions\Document;

use Yoti\IDV\Session\Instructions\Document\DocumentProposalBuilder;
use Yoti\IDV\Session\Instructions\Document\SelectedDocument;
use Yoti\Test\TestCase;

/**
 * @coversDefaultClass \Yoti\IDV\Session\Instructions\Document\DocumentProposal
 */
class DocumentProposalTest extends TestCase
{
    private const SOME_REQUIREMENT_ID = "someRequirementId";

    /**
     * @var SelectedDocument
     */
    private $selectedDocument;

    public function setup(): void
    {
        $this->selectedDocument = $this->createMock(SelectedDocument::class);
        parent::setup(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     * @covers ::__construct
     * @covers ::getRequirementId
     * @covers ::getDocument
     * @covers \Yoti\IDV\Session\Instructions\Document\DocumentProposalBuilder::build
     * @covers \Yoti\IDV\Session\Instructions\Document\DocumentProposalBuilder::withRequirementId
     * @covers \Yoti\IDV\Session\Instructions\Document\DocumentProposalBuilder::withSelectedDocument
     */
    public function builderShouldBuildWithAllProperties()
    {
        $result = (new DocumentProposalBuilder())
            ->withRequirementId(self::SOME_REQUIREMENT_ID)
            ->withSelectedDocument($this->selectedDocument)
            ->build();

        $this->assertEquals(self::SOME_REQUIREMENT_ID, $result->getRequirementId());
        $this->assertEquals($this->selectedDocument, $result->getDocument());
    }
}
